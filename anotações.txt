- node.js é um runtime do JavaScript
- biblioteca utilizada por um compilador durante a execução de um programa
- o código JS é compilado em C++ pra garantir alta performance

- npm: node package manager
	- gerenciador de pacotes do node
- pasta node_modules onde ficam os módulos externos, deve ser descartável

- o que são módulos?
	- são scripts reaproveitáveis, divididos em três categorias:
		- Internos: módulos que nós desenvolvemos
		- Core Modules: módulos que vem com o node.js
		- Externos: módulos que instalamos via npm 	
	- export e import
	- módulos externos
		- podem ser instalados via npm
		- pra isso, precisa inicializar o npm no projeto usando npm init
		- eles ficam salvos na pasta node_modules
		- instala com npm install <nomedomodulo>
- Lendo entrada de dados
	- readline, um core module
	- método question, pergunta ao usuário
	- módulo externo: inquirer
		- mais completo para resgatar e lidar com o input
		- baseado em promises

- Event Loop
	- O Node.js executa uma linha por vez, e de cima para baixo do código escrito;
	- evita problemas de concorrência
- Event Emitter
	- Se comporta como os eventos do navegador
	- ativa o código em alguns pontos da aplicação
	- Core Modules: events
	- precisa instanciar a classe EventEmitter
- Sync e Async
	- No node tem as duas opções:
		- Síncrono: o código espera ser totalmente executado para prossegir
		- Assíncrono: o código continua progredindo e em um ponto futuro obtém a resposta da execução assíncrona

- Tratamento de erros no Node
	- duas formas de gerar e evidenciar erros:
		- throw: encerra o programa gerando novo erro
		- try catch: evidencia algo errado de um bloco de código e exibe a mensagem de erro

CORE MODULES:
	- módulo http
	- módulo url
		- serve para decompor uma url que passamos para o método parse
		- pode-se resgatar: host, path, search, query e etc...
	- módulo fs(file system)
		- writeFile substitui tudo que tem num arquivo
		- se quiser atualizar deve-se usar o appendFile
		- método unlink para remover um arquivo usando o fs
		- rename precisa passar o arquivo como parâmetro e o novo nome para renomear
	- criar rotas com node.js puro
		- podemos criar um sistema de roteamento simplesc om node e seus core Modules
	- detalhes dos arquivos
	- módulo path
	- módulo OS

NPM (Node Package Manager)
	- é o principal gerenciador de pacotes do node.js
	- podemos não só instalar pacotes, mas também configurar o projeto e rodar scripts por meio do npm
	- a criação de um projeto sempre gera um arquivo, o package.json
	- para iniciar um projeto, podemos utilizar o comando "npm init"
	- o comando npm install <nome> instala um pacote com o nome que colocarmos
	- sempre que instalamos um pacote, é criada a pasta node_modules
	- sempre que rodamos o comando npm install a pasta node_modules é recriada com todos os módulos do package.json
	- é possível criar rotinas com o npm e assim executar uma série de comandos com apenas um
		- 'npm run <script>'
	- podemos também instalar um pacote global que não fica salvo na pasta node_modules
		- fica salvo na máquina
		- a vantagem é que podemos acessá-lo em qualquer local via terminal
		- utilizamos a 'flag -g' em 'node install'
	- para remover um pacote, é possível utilizar o npm uninstall <nomedopacote>

EXPRESS
	- é um framework para node.js muito utilizado para criar aplicações web
	- torna a criação de apps muito simplificada
	- criar rotas, renderizar html, conectar no banco de dados...
